services:
  # Local infra services (kafka, zookeeper, kafka-ui, postgresql, redis)
  kafka:
    image: bitnami/kafka:4.0.0-debian-12-r10
    restart: on-failure
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_AUTO_CREATE_TOPICS=true
    depends_on:
      zookeeper:
        condition: service_started
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1 # without this the kafka workers won't start correctly
      interval: 1s
      timeout: 60s
      retries: 60

  zookeeper:
    image: bitnami/zookeeper:3.9.3-debian-12-r21
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_started
    ports:
      - "${KAFKA_UI_PORT:-8080}:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  database:
    image: postgres:13.22-alpine3.22
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: "postgres"

  cache:
    image: redis:8.2.0
    restart: always

  emotion-processor-kafka-worker:
    restart: always
    extends:
      file: ./emotion-processor/docker-compose.yaml
      service: kafka-worker
    depends_on:
      kafka:
        condition: service_healthy
      cache:
        condition: service_started

  emotion-processor-queue-worker:
    restart: always
    extends:
      file: ./emotion-processor/docker-compose.yaml
      service: queue-worker
    depends_on:
      cache:
        condition: service_started

  emotion-processor-api:
    restart: always
    extends:
      file: ./emotion-processor/docker-compose.yaml
      service: api
    depends_on:
      database:
        condition: service_started
    ports:
      - "${EMOTION_PROCESSOR_API_PORT:-8881}:80"
